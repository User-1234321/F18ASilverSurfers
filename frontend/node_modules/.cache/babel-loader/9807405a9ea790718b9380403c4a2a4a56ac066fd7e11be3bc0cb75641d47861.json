{"ast":null,"code":"var _jsxFileName = \"/import/cage/7/z5480026/SENG2021/react-app/src/pages/Order.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from '../layout/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Order() {\n  _s();\n  const [orderId, setOrderId] = useState('');\n  const [despatchType, setDespatchType] = useState('Delivery');\n  const [fulfillment, setFulfillment] = useState('Full');\n  const [loading, setLoading] = useState(false);\n  const [responseXml, setResponseXml] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponseXml(null);\n    setError(null);\n    const despatchData = {\n      note: \"This is a test despatch note.\",\n      despatch_advice_type: despatchType,\n      fulfillment: fulfillment,\n      issue_date: new Date().toISOString().split(\"T\")[0],\n      // e.g., \"2025-04-08\"\n      quantity: 1,\n      backorder: false,\n      reason: \"Regular dispatch\"\n    };\n    try {\n      const response = await fetch(`http://localhost:8000/despatch-advice/${orderId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(despatchData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.detail || 'Unknown error occurred');\n      } else {\n        const xml = await response.text();\n        setResponseXml(xml);\n      }\n    } catch (err) {\n      setError(\"Failed to connect to backend: \" + err.message);\n    }\n    setLoading(false);\n    setOrderId('');\n    setDespatchType('Delivery');\n    setFulfillment('Full');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the Order Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"orderId\",\n        children: \"Order ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"orderId\",\n        value: orderId,\n        onChange: e => setOrderId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"despatchType\",\n        children: \"Despatch Advice Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"despatchType\",\n        value: despatchType,\n        onChange: e => setDespatchType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Delivery\",\n          children: \"Delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Return\",\n          children: \"Return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fulfillment\",\n        children: \"Fulfillment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"fulfillment\",\n        value: fulfillment,\n        onChange: e => setFulfillment(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Full\",\n          children: \"Full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Partial\",\n          children: \"Partial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), responseXml && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        whiteSpace: 'pre-wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response XML:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        children: responseXml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Order, \"Dn2RMpi32axAao2FF+lZPjm+z48=\");\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["useState","Header","jsxDEV","_jsxDEV","Order","_s","orderId","setOrderId","despatchType","setDespatchType","fulfillment","setFulfillment","loading","setLoading","responseXml","setResponseXml","error","setError","handleSubmit","e","preventDefault","despatchData","note","despatch_advice_type","issue_date","Date","toISOString","split","quantity","backorder","reason","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","detail","xml","text","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","style","marginTop","whiteSpace","color","_c","$RefreshReg$"],"sources":["/import/cage/7/z5480026/SENG2021/react-app/src/pages/Order.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Header from '../layout/Header';\r\n\r\nfunction Order() {\r\n  const [orderId, setOrderId] = useState('');\r\n  const [despatchType, setDespatchType] = useState('Delivery');\r\n  const [fulfillment, setFulfillment] = useState('Full');\r\n  const [loading, setLoading] = useState(false);\r\n  const [responseXml, setResponseXml] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setResponseXml(null);\r\n    setError(null);\r\n\r\n    const despatchData = {\r\n      note: \"This is a test despatch note.\",\r\n      despatch_advice_type: despatchType,\r\n      fulfillment: fulfillment,\r\n      issue_date: new Date().toISOString().split(\"T\")[0], // e.g., \"2025-04-08\"\r\n      quantity: 1,\r\n      backorder: false,\r\n      reason: \"Regular dispatch\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/despatch-advice/${orderId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(despatchData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setError(errorData.detail || 'Unknown error occurred');\r\n      } else {\r\n        const xml = await response.text();\r\n        setResponseXml(xml);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to connect to backend: \" + err.message);\r\n    }\r\n\r\n    setLoading(false);\r\n    setOrderId('');\r\n    setDespatchType('Delivery');\r\n    setFulfillment('Full');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <p>This is the Order Page</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"orderId\">Order ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"orderId\"\r\n          value={orderId}\r\n          onChange={(e) => setOrderId(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"despatchType\">Despatch Advice Type:</label>\r\n        <select\r\n          id=\"despatchType\"\r\n          value={despatchType}\r\n          onChange={(e) => setDespatchType(e.target.value)}\r\n        >\r\n          <option value=\"Delivery\">Delivery</option>\r\n          <option value=\"Return\">Return</option>\r\n          <option value=\"Cancel\">Cancel</option>\r\n        </select>\r\n\r\n        <label htmlFor=\"fulfillment\">Fulfillment:</label>\r\n        <select\r\n          id=\"fulfillment\"\r\n          value={fulfillment}\r\n          onChange={(e) => setFulfillment(e.target.value)}\r\n        >\r\n          <option value=\"Full\">Full</option>\r\n          <option value=\"Partial\">Partial</option>\r\n        </select>\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Submitting...\" : \"Submit\"}\r\n        </button>\r\n      </form>\r\n\r\n      {responseXml && (\r\n        <div style={{ marginTop: '1rem', whiteSpace: 'pre-wrap' }}>\r\n          <h3>Response XML:</h3>\r\n          <code>{responseXml}</code>\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div style={{ color: 'red', marginTop: '1rem' }}>\r\n          <strong>Error:</strong> {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,UAAU,CAAC;EAC5D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,IAAI,CAAC;IAChBE,cAAc,CAAC,IAAI,CAAC;IACpBE,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMI,YAAY,GAAG;MACnBC,IAAI,EAAE,+BAA+B;MACrCC,oBAAoB,EAAEf,YAAY;MAClCE,WAAW,EAAEA,WAAW;MACxBc,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAE;MACpDC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;IACV,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC1B,OAAO,EAAE,EAAE;QAC/E2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,YAAY;MACnC,CAAC,CAAC;MAEF,IAAI,CAACU,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvCvB,QAAQ,CAACsB,SAAS,CAACE,MAAM,IAAI,wBAAwB,CAAC;MACxD,CAAC,MAAM;QACL,MAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACjC5B,cAAc,CAAC2B,GAAG,CAAC;MACrB;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ3B,QAAQ,CAAC,gCAAgC,GAAG2B,GAAG,CAACC,OAAO,CAAC;IAC1D;IAEAhC,UAAU,CAAC,KAAK,CAAC;IACjBN,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,UAAU,CAAC;IAC3BE,cAAc,CAAC,MAAM,CAAC;EACxB,CAAC;EAED,oBACER,OAAA;IAAK2C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5C,OAAA,CAACF,MAAM;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhD,OAAA;MAAA4C,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7BhD,OAAA;MAAMiD,QAAQ,EAAElC,YAAa;MAAA6B,QAAA,gBAC3B5C,OAAA;QAAOkD,OAAO,EAAC,SAAS;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1ChD,OAAA;QACEmD,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,SAAS;QACZC,KAAK,EAAElD,OAAQ;QACfmD,QAAQ,EAAGtC,CAAC,IAAKZ,UAAU,CAACY,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAC5CG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFhD,OAAA;QAAOkD,OAAO,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3DhD,OAAA;QACEoD,EAAE,EAAC,cAAc;QACjBC,KAAK,EAAEhD,YAAa;QACpBiD,QAAQ,EAAGtC,CAAC,IAAKV,eAAe,CAACU,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAAAT,QAAA,gBAEjD5C,OAAA;UAAQqD,KAAK,EAAC,UAAU;UAAAT,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1ChD,OAAA;UAAQqD,KAAK,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtChD,OAAA;UAAQqD,KAAK,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAEThD,OAAA;QAAOkD,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDhD,OAAA;QACEoD,EAAE,EAAC,aAAa;QAChBC,KAAK,EAAE9C,WAAY;QACnB+C,QAAQ,EAAGtC,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAAAT,QAAA,gBAEhD5C,OAAA;UAAQqD,KAAK,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClChD,OAAA;UAAQqD,KAAK,EAAC,SAAS;UAAAT,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eAEThD,OAAA;QAAQmD,IAAI,EAAC,QAAQ;QAACM,QAAQ,EAAEhD,OAAQ;QAAAmC,QAAA,EACrCnC,OAAO,GAAG,eAAe,GAAG;MAAQ;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENrC,WAAW,iBACVX,OAAA;MAAK0D,KAAK,EAAE;QAAEC,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAhB,QAAA,gBACxD5C,OAAA;QAAA4C,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBhD,OAAA;QAAA4C,QAAA,EAAOjC;MAAW;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACN,EAEAnC,KAAK,iBACJb,OAAA;MAAK0D,KAAK,EAAE;QAAEG,KAAK,EAAE,KAAK;QAAEF,SAAS,EAAE;MAAO,CAAE;MAAAf,QAAA,gBAC9C5C,OAAA;QAAA4C,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACnC,KAAK;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9C,EAAA,CAxGQD,KAAK;AAAA6D,EAAA,GAAL7D,KAAK;AA0Gd,eAAeA,KAAK;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}